apply plugin: 'com.android.application'

apply plugin: 'kotlin-android'

apply plugin: 'kotlin-android-extensions'

apply plugin: 'kotlin-kapt'

android {
    compileSdkVersion 27
    defaultConfig {
        applicationId "com.ly.creativeworkshop"
        minSdkVersion 21
        targetSdkVersion 27
        versionCode 1
        versionName "1.0"
        multiDexEnabled true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        vectorDrawables.useSupportLibrary = true
        javaCompileOptions {
            annotationProcessorOptions {
                arguments = ["moduleName": project.name]
            }
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
    }
    //resourcePrefix "main_"
    sourceSets {
        main {
            res.srcDirs =
                    [
                            'src/main/res/layouts/launch',
                            'src/main/res',
                            'src/main/res/layouts/main',
                    ]
            jniLibs.srcDirs = ['libs']
        }
    }
    repositories {
        flatDir {
            dirs 'libs'
        }
    }
    packagingOptions {
        exclude 'META-INF/*'
        /* exclude 'META-INF/DEPENDENCIES.txt'
         exclude 'META-INF/LICENSE.txt'
         exclude 'META-INF/NOTICE.txt'
         exclude 'META-INF/NOTICE'
         exclude 'META-INF/LICENSE'
         exclude 'META-INF/DEPENDENCIES'
         exclude 'META-INF/notice.txt'
         exclude 'META-INF/license.txt'
         exclude 'META-INF/dependencies.txt'
         exclude 'META-INF/LGPL2.1'
         exclude 'META-INF/rxjava.properties'*/
    }
    configurations.all {
        resolutionStrategy.eachDependency { DependencyResolveDetails details ->
            def requested = details.requested
            if (requested.group == 'com.android.support') {
                if (!requested.name.startsWith("multidex")
                        && !requested.name.startsWith("support-emoji")
                        && !requested.name.startsWith("support-emoji-appcompat")) {
                    details.useVersion '27.1.0'
                }
            }
        }
    }
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    /*test*/
    androidTestImplementation 'com.android.support.test:runner:1.0.1'
    androidTestImplementation 'com.android.support.test.espresso:espresso-core:3.0.1'
    testImplementation 'junit:junit:4.12'
    /*module*/
    if (!isDebug.toBoolean()) {
        implementation project(':loginandregister')
        implementation project(':mylibrary')
    }
    implementation project(':baselibrary')
    /*router*/
    implementation "com.chenenyu.router:router:1.4.0-beta1"
    kapt "com.chenenyu.router:compiler:$router_version"
    /*kotlin*/
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    /*flexBox*/
    implementation "com.google.android:flexbox:$flexbox_version"
    /*support*/
    implementation "com.android.support:recyclerview-v7:$support_version"
    implementation "com.android.support:cardview-v7:$support_version"
    implementation "com.android.support:design:$support_version"
    implementation "com.android.support:multidex:$multidex_version"
    implementation "com.android.support:appcompat-v7:$support_version"
    implementation "com.android.support.constraint:constraint-layout:$constraint_version"
    /*dialog*/
    implementation "com.github.q876625596:NiceDialog:$myDialog_version"
    /*animator*/
    implementation "com.github.q876625596:BezierAnimation:$myAnim_version"
    /*Lifecycle,ViewModel,LiveData*/
    implementation "android.arch.lifecycle:runtime:$arch_version"
    implementation "android.arch.lifecycle:extensions:$arch_version"
    kapt "android.arch.lifecycle:compiler:$arch_version"
    /*Gson*/
    implementation "com.google.code.gson:gson:$gson_version"
    /*RX2*/
    implementation "io.reactivex.rxjava2:rxandroid:$RxAdroid2_version"
    implementation "io.reactivex.rxjava2:rxkotlin:$RxJava2_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle:$RxJava2_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-android:$RxJava2_version"
    implementation "com.trello.rxlifecycle2:rxlifecycle-components:$RxJava2_version"
    /*RxBus*/
    implementation "com.hwangjr.rxbus:rxbus:$RxBus_version"
    /*Retrofit2*/
    implementation "com.squareup.retrofit2:retrofit:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-scalars:$retrofit2_version"
    implementation "com.squareup.retrofit2:converter-gson:$retrofit2_version"
    implementation "com.squareup.retrofit2:adapter-rxjava2:$retrofit2_version"
    /*glide*/
    implementation "com.github.bumptech.glide:glide:$glide_version"
    kapt "com.github.bumptech.glide:compiler:$glide_version"

}
